#pragma once

#include "RenderSystem/RenderHandles.h"
#include "MemorySystem.h"

BEGINNAMESPACE

class HardwareResourcePool {
public:
	static const size_type MaxShaderPrograms = 1 << ShaderProgramHandle::IndexBitCount;
	static const size_type MaxVertexArrays = 1 << VertexBufferHandle::IndexBitCount;
public:
	HardwareResourcePool();
	~HardwareResourcePool();

	VertexArrayHandle getVertexArray();
	void freeVertexArray(VertexArrayHandle hdl);

    RenderTargetHandle getRenderTarget();

private:
	typedef ProxyAllocator < PoolAllocator, policy::NoSync, policy::NoBoundsChecking, policy::NoTracking, policy::NoTagging> PoolAlloc;
	PoolAlloc m_VertexArrayObjects;
	PoolAlloc m_ShaderPrograms;
};

ENDNAMESPACE
